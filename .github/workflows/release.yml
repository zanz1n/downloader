name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Install docker
        uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 10

      - name: Install cross
        run: |
          mkdir bin
          curl -L https://github.com/cross-rs/cross/releases/latest/download/cross-$(uname -m)-unknown-linux-gnu.tar.gz | tar -xz -C bin
          chmod +x ./bin/*

      - name: Build (x86_64)
        run: |
          ./bin/cross build --target=x86_64-unknown-linux-gnu --release
          cp target/x86_64-unknown-linux-gnu/release/downloader bin/downloader-amd64

      - name: Build (aarch64)
        run: |
          ./bin/cross build --target=aarch64-unknown-linux-gnu --release
          cp target/aarch64-unknown-linux-gnu/release/downloader bin/downloader-arm64

      - name: Create checksum
        run: |
          SUM2=`cd bin && sha256sum downloader-amd64`
          SUM3=`cd bin && sha256sum downloader-arm64`
          echo -e "\n#### SHA256 Checksum\n\`\`\`\n$SUM1\n$SUM2\n\`\`\`\n" >> ./RELEASE_CHANGELOG
          echo -e "$SUM1\n$SUM2" > checksums.txt

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          body_path: ./RELEASE_CHANGELOG

      - name: Upload amd64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/downloader-amd64
          asset_name: downloader-amd64
          asset_content_type: application/octet-stream

      - name: Upload arm64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/downloader-arm64
          asset_name: downloader-arm64
          asset_content_type: application/octet-stream

      - name: Upload checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain
